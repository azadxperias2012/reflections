How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It is easy to find the exact line of code that caused the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Maintaing the entire history of a file helps to look and retrieve the changes done
    on a particular file. We can able to compare a file at any point of time with the 
    previous changes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros : can able to save the correct changes
    cons : changes will be overwritten or lost if the commit is not proper

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Changes in each file can be identified easily by looking between the commits.

How can you use the commands git log and git diff to view the history of files?

    git log can be used to identify the commits in a particular files
    git diff can be used to get the differences in files committed from one commit to another 

How might using version control make you more confident to make changes that
could break something?

    You can try changing any critical features, since you can always revert back to the point when those were working correctly. If you find something is not working, you can git log, and try the previous versions untill you find the one which works, and make diff of the last one that worked correctly and the commit following it. That result would show where and how the bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    Writing my own programs.